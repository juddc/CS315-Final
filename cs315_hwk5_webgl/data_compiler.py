"""
This script 'compiles' multiple text files into a single Javascript file
containing strings that represent each input file.

The goal is to store shader and model data in individual, easily editable
files, but still have the convenience of being able to load one big JavaScript
file and not need to worry about where those files come from.

To configure this script, just edit the OUTPUT_FILE and INPUT_FILES variables
at the top.
"""

# save path
OUTPUT_FILE = "GameData.js"

# first tuple element is the resulting javascript variable name
# second tuple element is the path to the input file.
INPUT_FILES = [
    ('VERTEX_SHADER',   'vertex_shader.glsl'),
    ('FRAGMENT_SHADER', 'fragment_shader.glsl'),
    ('FANCYCUBE_OBJ',   'FancyCube.obj'),
    ('TEAPOT_OBJ',      'teapot.obj'),

    #('CUBE_OBJ',        'cube.obj'),
    #('LEGOMAN_OBJ',     'legoman.obj'),
    #('LEGOMAN_MTL',     'legoman.mtl'),
]


def convertObjFile(varName, fileName):
    output = []

    objFile = open(fileName, 'r')
    for line in objFile:
        output.append('"%s\\n"' % line.strip())

    # make sure an empty file wont break the resulting output
    if len(output) == 0:
        output.append('""')

    objFile.close()
    
    return "var %s =\n\t%s;" % (varName, " +\n\t".join(output))


def saveToFile(data, fileName):
    fp = open(fileName, 'w')
    fp.write(data)
    fp.close()


if __name__ == "__main__":
    # output data list. each list item is a line in the output file.
    output = [
        # Output file header
        "// This file is autogenerated. Please do not edit it, your changes will be lost.",
    ]

    # List all input files in the header for easy readability
    for varName, fileName in INPUT_FILES:
        output.append("// %s = %s" % (varName, fileName))

    # seperator
    output.append("")

    # generate output and tack that onto the file
    for varName, fileName in INPUT_FILES:
        output.append(convertObjFile(varName, fileName))

    # a variable that's always in the output so scripts can tell if it's been loaded correctly
    output.append("\nvar DATA_LOADED = true;\n")

    # save data
    saveToFile("\n".join(output), OUTPUT_FILE)

